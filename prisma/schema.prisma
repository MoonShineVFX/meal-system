generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum CurrencyType {
  POINT
  CREDIT
}

enum TransactionType {
  RECHARGE
  PAYMENT
  RESERVE
  REFUND
}

enum Role {
  SERVER
  ADMIN
  STAFF
  USER
}

model AuthToken {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

model User {
  id                String        @id
  name              String        @db.VarChar(255)
  role              Role          @default(USER)
  createdAt         DateTime      @default(now())
  points            Int           @default(500)
  credits           Int           @default(0)
  sourceTransaction Transaction[] @relation("Source")
  targetTransaction Transaction[] @relation("Target")
  authTokens        AuthToken[]
}

model Transaction {
  id           Int             @id @default(autoincrement())
  createdAt    DateTime        @default(now())
  sourceUser   User            @relation("Source", fields: [sourceUserId], references: [id])
  sourceUserId String
  targetUser   User            @relation("Target", fields: [targetUserId], references: [id])
  targetUserId String
  type         TransactionType
  amount       Int
  currency     CurrencyType

  @@index(sourceUserId)
  @@index(targetUserId)
}

model Setting {
  id            Int      @id @default(autoincrement())
  lastTopUpDate DateTime @default(now())
  topUpValue    Int      @default(500)
}
